// Top-level build file where you can add configuration options common to all
// sub-projects/modules.
buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'
    }
}

apply plugin: 'com.android.application'

repositories {
    google()
    jcenter()
    mavenCentral()
}

allprojects {
    repositories {
        maven{
            url "https://github.com/omadahealth/omada-nexus/raw/master/release"
        }
        jcenter()

    }
}

configurations {
    playstoreImplementation
    compatImplementation
    messengerFreeCompatImplementation
    quicksyFreeCompatImplementation
    quicksyImplementation
}

ext {
    supportLibVersion = '28.0.0'
}

dependencies {
    playstoreImplementation('com.google.firebase:firebase-messaging:17.3.4') {
        exclude group: 'com.google.firebase', module: 'firebase-core'
        exclude group: 'com.google.firebase', module: 'firebase-analytics'
        exclude group: 'com.google.firebase', module: 'firebase-measurement-connector'
    }
    implementation 'org.sufficientlysecure:openpgp-api:10.0'
    implementation('com.theartofdev.edmodo:android-image-cropper:2.7.+') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'exifinterface'
    }
    implementation "com.android.support:support-v13:$supportLibVersion"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:exifinterface:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support:support-emoji:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    compatImplementation "com.android.support:support-emoji-appcompat:$supportLibVersion"
    messengerFreeCompatImplementation "com.android.support:support-emoji-bundled:$supportLibVersion"
    quicksyFreeCompatImplementation "com.android.support:support-emoji-bundled:$supportLibVersion"
    implementation 'org.bouncycastle:bcmail-jdk15on:1.58'
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'de.measite.minidns:minidns-hla:0.2.4'
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'org.whispersystems:signal-protocol-java:2.6.2'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.wefika:flowlayout:0.4.1'
    implementation 'net.ypresto.androidtranscoder:android-transcoder:0.3.0'
    implementation project(':libs:xmpp-addr')
    implementation 'org.osmdroid:osmdroid-android:6.0.3'
    implementation 'org.hsluv:hsluv:0.2'
    implementation 'org.conscrypt:conscrypt-android:1.3.0'
    implementation 'me.drakeet.support:toastcompat:1.1.0'
    implementation 'com.leinardi.android:speed-dial:2.0.1'
    quicksyImplementation 'io.michaelrocks:libphonenumber-android:8.10.1'
    implementation 'uk.me.lewisdeane.ldialogs:ldialogs:1.2.0@aar'

    //RippleView

    //implementation 'com.github.traex.rippleeffect:ripple:1.3.1-OG'

    //TypefaceView

    //implementation 'com.github.omadahealth.typefaceview:typefaceview:1.3.0@aar'

    //Compat

    //implementation 'com.google.code.gson:gson:2.7'

    //implementation 'com.android.support:support-v4:26.+'

    //implementation 'com.android.support:appcompat-v7:26.+'

    // GOOBER PIN

    //RippleView
    implementation 'com.github.traex.rippleeffect:ripple:1.3.1-OG'

    //TypefaceView
    implementation 'com.github.omadahealth.typefaceview:typefaceview:1.5.0@aar'

    // GOOBER COGNITO - S3
    //implementation 'com.amazonaws:aws-android-sdk-s3:2.7.+'
    //ALF AM-313, AM-346
    implementation 'com.amazonaws:aws-android-sdk-s3:2.14.2'

    // GOOBER COGNITO - Demo

    //implementation 'com.android.support:appcompat-v7:26.0.0'

    //implementation 'com.android.support:design:26.0.0'

    //implementation 'com.android.support:cardview-v7:26.0.0'

    //implementation 'com.android.support:recyclerview-v7:28.0.0' //ALF test
    implementation 'com.android.support.constraint:constraint-layout:1.0.0-beta3'
    //implementation 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.6.8'
    //ALF AM-313, AM-346
    implementation 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.14.2'

    // CMG AM-254 materialx third party dependencies
    implementation 'com.balysv:material-ripple:1.0.2'                  // ripple effect
    implementation 'com.github.bumptech.glide:glide:3.7.0'             // image loader
    implementation 'com.mikhaellopez:circularimageview:3.2.0'          // circle image view


    // google maps library ------------------------------------------------------------------------
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    implementation 'com.google.android.gms:play-services-places:15.0.1'
    implementation "com.android.support:support-emoji:28.0.0"

}

ext {
    travisBuild = System.getenv("TRAVIS") == "true"
    preDexEnabled = System.getProperty("pre-dex", "true")
}

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 357
        versionName "2.4.0-RC42"
        archivesBaseName += "-$versionName"
        applicationId "com.glaciersecurity.glaciermessenger"
        resValue "string", "applicationId", applicationId
        resValue "string", "app_name", "Messenger"
        buildConfigField "String", "LOGTAG", "\"messenger\""

        vectorDrawables.useSupportLibrary = true
    }
    dataBinding {
        enabled true
    }
    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
        jumboMode true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions("mode", "distribution", "emoji")
    productFlavors {
        quicksy {
            dimension "mode"
            applicationId = "im.quicksy.client"
            resValue "string", "app_name", "Quicksy"
            resValue "string", "applicationId", applicationId
            buildConfigField "String", "LOGTAG", "\"quicksy\""
        }

        messenger {
            dimension "mode"
        }

        playstore {
            dimension "distribution"
        }
        free {
            dimension "distribution"
        }
        system {
            dimension "emoji"
        }
        compat {
            dimension "emoji"
        }
    }
    sourceSets {
        quicksyFreeCompat {
            java {
                srcDirs 'src/freeCompat/java'
            }
        }
        quicksyPlaystoreCompat {
            java {
                srcDirs 'src/playstoreCompat/java'
            }
            res {
                srcDir 'src/playstoreCompat/res'
                srcDir 'src/quicksyPlaystore/res'
            }
        }
        quicksyPlaystoreSystem {
            res {
                srcDir 'src/quicksyPlaystore/res'
            }
        }
        messengerFreeCompat {
            java {
                srcDirs 'src/freeCompat/java'
            }
        }
        messengerPlaystoreCompat {
            java {
                srcDirs 'src/playstoreCompat/java'
            }
            res {
                srcDir 'src/playstoreCompat/res'
                srcDir 'src/messengerPlaystore/res'
            }
        }
        messengerPlaystoreSystem {
            res {
                srcDir 'src/messengerPlaystore/res'
            }
        }
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    if (new File("signing.properties").exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(file("signing.properties")))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keystore.alias']
                keyPassword props['keystore.password']
            }
        }
        buildTypes.release.signingConfig = signingConfigs.release
    }
    lintOptions {
        disable 'ExtraTranslation', 'MissingTranslation', 'InvalidPackage', 'MissingQuantity', 'AppCompatResource'
        // checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    subprojects {

        afterEvaluate {
            if (getPlugins().hasPlugin('android') ||
                    getPlugins().hasPlugin('android-library')) {

                configure(android.lintOptions) {
                    disable 'AndroidGradlePluginVersion', 'MissingTranslation'
                }
            }

        }
    }
    packagingOptions {
        exclude 'META-INF/BCKEY.DSA'
        exclude 'META-INF/BCKEY.SF'
    }
    buildToolsVersion '28.0.3'
}
