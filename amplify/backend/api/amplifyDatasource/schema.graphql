input CreateGlacierUsersInput {
  organization: String!
  username: String!
  email: String
  glacierpwd: String
  extension_voiceserver: String
  messenger_id: String
  user_name: String
}

input DeleteGlacierUsersInput {
  organization: String!
  username: String!
}

type GlacierUsers {
  organization: String!
  username: String!
  email: String
  glacierpwd: String
  extension_voiceserver: String
  messenger_id: String
  user_name: String
}

type GlacierUsersConnection {
  items: [GlacierUsers]
  nextToken: String
}

type Mutation {
  createGlacierUsers(input: CreateGlacierUsersInput!): GlacierUsers
  updateGlacierUsers(input: UpdateGlacierUsersInput!): GlacierUsers
  deleteGlacierUsers(input: DeleteGlacierUsersInput!): GlacierUsers
}

type Query {
  getGlacierUsers(organization: String!, username: String!): GlacierUsers
  listGlacierUsers(filter: TableGlacierUsersFilterInput, limit: Int, nextToken: String): GlacierUsersConnection
}

type Subscription {
  onCreateGlacierUsers(
    organization: String,
    username: String,
    email: String,
    glacierpwd: String,
    extension_voiceserver: String
  ): GlacierUsers
  @aws_subscribe(mutations: ["createGlacierUsers"])
  onUpdateGlacierUsers(
    organization: String,
    username: String,
    email: String,
    glacierpwd: String,
    extension_voiceserver: String
  ): GlacierUsers
  @aws_subscribe(mutations: ["updateGlacierUsers"])
  onDeleteGlacierUsers(
    organization: String,
    username: String,
    email: String,
    glacierpwd: String,
    extension_voiceserver: String
  ): GlacierUsers
  @aws_subscribe(mutations: ["deleteGlacierUsers"])
}

input TableBooleanFilterInput {
  ne: Boolean
  eq: Boolean
}

input TableFloatFilterInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  contains: Float
  notContains: Float
  between: [Float]
}

input TableGlacierUsersFilterInput {
  organization: TableStringFilterInput
  username: TableStringFilterInput
  email: TableStringFilterInput
  glacierpwd: TableStringFilterInput
  extension_voiceserver: TableStringFilterInput
  messenger_id: TableStringFilterInput
  user_name: TableStringFilterInput
}

input TableIDFilterInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
}

input TableIntFilterInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  contains: Int
  notContains: Int
  between: [Int]
}

input TableStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}

input UpdateGlacierUsersInput {
  organization: String!
  username: String!
  email: String
  glacierpwd: String
  extension_voiceserver: String
  messenger_id: String
  user_name: String
}